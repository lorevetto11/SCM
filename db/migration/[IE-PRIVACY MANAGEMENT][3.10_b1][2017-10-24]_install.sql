******************************************************************************************************
 GPI s.p.a.

 SCRIPT DI MIGRATION 

 APPLICAZIONE: PrivacyManagement
 VERSIONE     
 CLIENTE      
 DATA         
 AUTORE       
 NOTE         

*******************************************************************************************************/

DEFINE _connectId = "[[CONNECT_IDENTIFIER]]"          		-- Oracle Net database alias
DEFINE _usrPrivacyManagement = "[[PRIVACYMGER_USR]]"        -- Utente Oracle PrivacyManagement
DEFINE _passwdPrivacyManagement = "[[PRIVACYMGER_PWD]]"     -- Password Oracle PrivacyManagement

DEFINE _usrRepo = "[[REPOSITORY_USR]]"        				-- Utente Oracle repository
DEFINE _passwdAnagrafe = "[[REPOSITORY_PWD]]"     			-- Password Oracle repository



CONNECT &&_usrPrivacyManagement/&&_passwdPrivacyManagement@&&_connectId;


ALTER TABLE DICTIONARY_VALUES DROP CONSTRAINT FK_DICTION_VAL_DICTION_VAL_1;
ALTER TABLE PRIVACY_DOCUMENTS ADD  FL_P7M_PACKED        NUMBER (1) DEFAULT 0;



CONNECT &&_usrRepo/&&_passwdAnagrafe@&&_connectId;

DECLARE 
	ADAPTER_ID NUMBER;
	OBJ_EXISTS NUMBER;
BEGIN

   SELECT ID_ADAPTER_INBOUND INTO ADAPTER_ID
   FROM APPLICATIONS  WHERE EXTERNAL_CODE = 'PRIVACY_MANAGEMENT';
   IF ADAPTER_ID > 0 THEN


		/* DECODE(A.MODALITY, 1->'CODE+DESCR', 2->'DESCR', 3->'CODE', 4->'VALUE', NULL) */
		INSERT INTO CLASSIFICATION_SCHEME_ADAP (ID,ID_CLASSIFICATION_SCHEME,ID_ADAPTER,ATTRIBUTE_CODE,ATTRIBUTE_LABEL,FL_VISIBILITY,ADAPTER_ORDER, MODALITY) VALUES (SEQ_CLASSIFICATION_SCHEME_ADAP.NEXTVAL,110,ADAPTER_ID,'firmaDigitale','FIRMA DIGITALE',0,NULL, 3);

	
	END IF;
		
	COMMIT;
END;
/

insert into dba_revisions(id, revision,description,script_name,INSERT_DATETIME) values (SEQ_DBA_REVISIONS.nextval, 23,'Tolto constraint FK_DICTION_VAL_DICTION_VAL_1, aggiunto colonna Aggiunta colonna FL_P7M_PACKED sulla tabella PRIVACY_DOCUMENTS', 'wip.sql', sysdate);



CONNECT &&_usrPrivacyManagement/&&_passwdPrivacyManagement@&&_connectId;


ALTER TABLE PATIENT_CODES RENAME TO PATIENT_CODES_PM;
ALTER TABLE PATIENT_CODES_PM DROP CONSTRAINT FK_PATIENT_CODE;

ALTER TABLE PATIENT_CODES_PM DROP CONSTRAINT FK_PATIENT_CODE;
ALTER TABLE PATIENT_CODES_PM ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PATIENT_CODES_PM SET PATIENT_CODE = ID_PATIENT;
ALTER TABLE PATIENT_CODES_PM DROP COLUMN ID_PATIENT;
ALTER TABLE PATIENT_CODES_PM RENAME COLUMN PATIENT_CODE TO ID_PATIENT;
--ALTER TABLE PATIENT_CODES_PM ADD CONSTRAINT FK_PATIENT_CODE FOREIGN KEY ( ID_PATIENT ) REFERENCES PATIENTS ( ID ) ;


--ALTER TABLE PATIENT_PRIVACY_CONSENTS DROP CONSTRAINT FK_PATIENT_PRIV_CONS;
ALTER TABLE PATIENT_PRIVACY_CONSENTS ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PATIENT_PRIVACY_CONSENTS SET PATIENT_CODE = ID_PATIENT;
ALTER TABLE PATIENT_PRIVACY_CONSENTS DROP COLUMN ID_PATIENT;
ALTER TABLE PATIENT_PRIVACY_CONSENTS RENAME COLUMN PATIENT_CODE TO ID_PATIENT;
--ALTER TABLE PATIENT_PRIVACY_CONSENTS ADD CONSTRAINT FK_PATIENT_PRIV_CONS FOREIGN KEY ( ID_PATIENT ) REFERENCES PATIENTS ( ID ) ;


ALTER TABLE PATIENT_SESSIONS ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PATIENT_SESSIONS SET PATIENT_CODE = ID_PATIENT;
ALTER TABLE PATIENT_SESSIONS DROP COLUMN ID_PATIENT;
ALTER TABLE PATIENT_SESSIONS RENAME COLUMN PATIENT_CODE TO ID_PATIENT;


ALTER TABLE PRIVACY_DOCUMENTS ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PRIVACY_DOCUMENTS SET PATIENT_CODE = ID_PATIENT;
ALTER TABLE PRIVACY_DOCUMENTS DROP COLUMN ID_PATIENT;
ALTER TABLE PRIVACY_DOCUMENTS RENAME COLUMN PATIENT_CODE TO ID_PATIENT;

ALTER TABLE PATIENT_DATA_SNAPSHOTS ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PATIENT_DATA_SNAPSHOTS SET PATIENT_CODE = PATIENT_SOURCE_ID;
ALTER TABLE PATIENT_DATA_SNAPSHOTS DROP COLUMN PATIENT_SOURCE_ID;
ALTER TABLE PATIENT_DATA_SNAPSHOTS RENAME COLUMN PATIENT_CODE TO PATIENT_SOURCE_ID;



ALTER TABLE PATIENTS_PM ADD PATIENT_CODE  VARCHAR2 (128);
UPDATE PATIENTS_PM SET PATIENT_CODE = ID;
ALTER TABLE PATIENTS_PM DROP COLUMN ID;
ALTER TABLE PATIENTS_PM RENAME COLUMN PATIENT_CODE TO ID;



insert into dba_revisions(id, revision,description,script_name,INSERT_DATETIME) values (SEQ_DBA_REVISIONS.nextval, 24,'Modify colonna ID a varchar', 'wip.sql', sysdate);



ALTER TABLE PATIENT_PRIVACY_CONSENTS ADD CODE_INSERT_USER VARCHAR2 (128);
UPDATE PATIENT_PRIVACY_CONSENTS SET CODE_INSERT_USER = ID_INSERT_USER;
ALTER TABLE PATIENT_PRIVACY_CONSENTS DROP COLUMN ID_INSERT_USER;
ALTER TABLE PATIENT_PRIVACY_CONSENTS RENAME COLUMN CODE_INSERT_USER TO ID_INSERT_USER;

ALTER TABLE PATIENT_PRIVACY_CONSENTS ADD CODE_LASTUPDATE_USER VARCHAR2 (128);
UPDATE PATIENT_PRIVACY_CONSENTS SET CODE_LASTUPDATE_USER = ID_LASTUPDATE_USER;
ALTER TABLE PATIENT_PRIVACY_CONSENTS DROP COLUMN ID_LASTUPDATE_USER;
ALTER TABLE PATIENT_PRIVACY_CONSENTS RENAME COLUMN CODE_LASTUPDATE_USER TO ID_LASTUPDATE_USER;

--rename user column
ALTER TABLE USERS_PM ADD USER_CODE  VARCHAR2 (128);
UPDATE USERS_PM SET USER_CODE = ID;
ALTER TABLE USERS_PM DROP COLUMN ID;
ALTER TABLE USERS_PM RENAME COLUMN USER_CODE TO ID;

insert into dba_revisions(id, revision,description,script_name,INSERT_DATETIME) values (SEQ_DBA_REVISIONS.nextval, 25,'Modify colonna ID a varchar per la tabella Users', 'wip.sql', sysdate);



